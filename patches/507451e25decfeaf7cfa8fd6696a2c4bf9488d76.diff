diff --git a/autotest/gcore/vrt_read.py b/autotest/gcore/vrt_read.py
index f862ae0a2e2..1241b51e2aa 100755
--- a/autotest/gcore/vrt_read.py
+++ b/autotest/gcore/vrt_read.py
@@ -1408,3 +1408,62 @@ def test_vrt_dataset_rasterio_non_nearest_resampling_source_with_ovr():
     assert got_data[0] == 10
 
     gdal.Unlink('/vsimem/src.tif')
+
+
+def test_vrt_implicit_ovr_with_hidenodatavalue():
+
+    ds = gdal.GetDriverByName('GTiff').Create('/vsimem/src.tif', 256, 256, 3)
+    ds.GetRasterBand(1).Fill(255)
+    ds.BuildOverviews('NONE', [2])
+    ds.GetRasterBand(1).GetOverview(0).Fill(10)
+    ds = None
+
+    vrt_text = """<VRTDataset rasterXSize="256" rasterYSize="256">
+  <VRTRasterBand dataType="Byte" band="1">
+    <ColorInterp>Red</ColorInterp>
+    <NoDataValue>5</NoDataValue>
+    <HideNoDataValue>1</HideNoDataValue>
+    <ComplexSource>
+      <SourceFilename>/vsimem/src.tif</SourceFilename>
+      <SourceBand>1</SourceBand>
+      <SrcRect xOff="0" yOff="0" xSize="128" ySize="128" />
+      <DstRect xOff="128" yOff="128" xSize="128" ySize="128" />
+    </ComplexSource>
+  </VRTRasterBand>
+  <VRTRasterBand dataType="Byte" band="2">
+    <ColorInterp>Green</ColorInterp>
+    <NoDataValue>5</NoDataValue>
+    <HideNoDataValue>1</HideNoDataValue>
+    <ComplexSource>
+      <SourceFilename>/vsimem/src.tif</SourceFilename>
+      <SourceBand>2</SourceBand>
+      <SrcRect xOff="0" yOff="0" xSize="128" ySize="128" />
+      <DstRect xOff="128" yOff="128" xSize="128" ySize="128" />
+    </ComplexSource>
+  </VRTRasterBand>
+  <VRTRasterBand dataType="Byte" band="3">
+    <ColorInterp>Blue</ColorInterp>
+    <NoDataValue>5</NoDataValue>
+    <HideNoDataValue>1</HideNoDataValue>
+    <ComplexSource>
+      <SourceFilename>/vsimem/src.tif</SourceFilename>
+      <SourceBand>3</SourceBand>
+      <SrcRect xOff="0" yOff="0" xSize="128" ySize="128" />
+      <DstRect xOff="128" yOff="128" xSize="128" ySize="128" />
+    </ComplexSource>
+  </VRTRasterBand>
+</VRTDataset>"""
+    ds = gdal.Open(vrt_text)
+    assert ds.GetRasterBand(1).GetOverviewCount() == 1
+
+    got_data = ds.ReadRaster(0,0,256,256,64,64)
+    got_data = struct.unpack('B' * 64 * 64 * 3, got_data)
+    assert got_data[0] == 5
+    assert got_data[32*64+32] == 10
+
+    got_data = ds.GetRasterBand(1).ReadRaster(0,0,256,256,64,64)
+    got_data = struct.unpack('B' * 64 * 64, got_data)
+    assert got_data[0] == 5
+    assert got_data[32*64+32] == 10
+
+    gdal.Unlink('/vsimem/src.tif')
diff --git a/gdal/frmts/vrt/vrtdataset.cpp b/gdal/frmts/vrt/vrtdataset.cpp
index 00531d34e57..0c0d87bb6f3 100644
--- a/gdal/frmts/vrt/vrtdataset.cpp
+++ b/gdal/frmts/vrt/vrtdataset.cpp
@@ -2050,15 +2050,17 @@ void VRTDataset::BuildVirtualOverviews()
 
         const auto CreateOverviewBand =
             [&poOvrVDS, nOvrXSize, nOvrYSize, dfXRatio, dfYRatio]
-            (GDALRasterBand* poBand)
+            (VRTSourcedRasterBand* poVRTBand)
         {
-            VRTSourcedRasterBand* poVRTBand
-                = cpl::down_cast<VRTSourcedRasterBand *>(poBand);
             VRTSourcedRasterBand* poOvrVRTBand = new VRTSourcedRasterBand(
                 poOvrVDS,
-                poBand->GetBand(),
+                poVRTBand->GetBand(),
                 poVRTBand->GetRasterDataType(),
                 nOvrXSize, nOvrYSize);
+            poOvrVRTBand->CopyCommonInfoFrom(poVRTBand);
+            poOvrVRTBand->m_bNoDataValueSet = poVRTBand->m_bNoDataValueSet;
+            poOvrVRTBand->m_dfNoDataValue = poVRTBand->m_dfNoDataValue;
+            poOvrVRTBand->m_bHideNoDataValue = poVRTBand->m_bHideNoDataValue;
 
             VRTSimpleSource* poSrcSource = cpl::down_cast<VRTSimpleSource *>(
                 poVRTBand->papoSources[0] );
@@ -2080,7 +2082,7 @@ void VRTDataset::BuildVirtualOverviews()
             }
             if( poNewSource )
             {
-                auto poNewSourceBand = poBand->GetBand() == 0 ?
+                auto poNewSourceBand = poVRTBand->GetBand() == 0 ?
                     poNewSource->GetMaskBandMainBand() :
                     poNewSource->GetBand();
                 CPLAssert(poNewSourceBand);
@@ -2095,13 +2097,19 @@ void VRTDataset::BuildVirtualOverviews()
 
         for( int i = 0; i < nBands; i++ )
         {
-            poOvrVDS->SetBand( poOvrVDS->GetRasterCount() + 1,
-                               CreateOverviewBand(GetRasterBand(i+1)) );
+            VRTSourcedRasterBand* poSrcBand
+                = cpl::down_cast<VRTSourcedRasterBand *>(GetRasterBand(i+1));
+            auto poOvrVRTBand = CreateOverviewBand(poSrcBand);
+            poOvrVDS->SetBand( poOvrVDS->GetRasterCount() + 1, poOvrVRTBand );
+
         }
 
         if( m_poMaskBand )
         {
-            poOvrVDS->SetMaskBand( CreateOverviewBand(m_poMaskBand) );
+            VRTSourcedRasterBand* poSrcBand
+                = cpl::down_cast<VRTSourcedRasterBand *>(m_poMaskBand);
+            auto poOvrVRTBand = CreateOverviewBand(poSrcBand);
+            poOvrVDS->SetMaskBand(poOvrVRTBand);
         }
     }
 }
diff --git a/gdal/frmts/vrt/vrtdataset.h b/gdal/frmts/vrt/vrtdataset.h
index b0f80a876a5..7cee5d6c844 100644
--- a/gdal/frmts/vrt/vrtdataset.h
+++ b/gdal/frmts/vrt/vrtdataset.h
@@ -438,6 +438,8 @@ class VRTPansharpenedDataset final: public VRTDataset
 class CPL_DLL VRTRasterBand CPL_NON_FINAL: public GDALRasterBand
 {
   protected:
+    friend class VRTDataset;
+
     int            m_bIsMaskBand;
 
     int            m_bNoDataValueSet;
