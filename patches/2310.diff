diff --git a/gdal/port/cpl_conv.cpp b/gdal/port/cpl_conv.cpp
index 290d561297d..9c047793629 100644
--- a/gdal/port/cpl_conv.cpp
+++ b/gdal/port/cpl_conv.cpp
@@ -78,6 +78,7 @@
 #include "cpl_multiproc.h"
 #include "cpl_string.h"
 #include "cpl_vsi.h"
+#include "cpl_vsil_curl_priv.h"
 
 #ifdef DEBUG
 #define OGRAPISPY_ENABLED
@@ -1798,6 +1799,18 @@ CPLGetThreadLocalConfigOption( const char *pszKey, const char *pszDefault )
     return pszResult;
 }
 
+/************************************************************************/
+/*                  NotifyOtherComponentsConfigOptionChanged()          */
+/************************************************************************/
+
+static void NotifyOtherComponentsConfigOptionChanged( const char *pszKey,
+                                                      const char * /*pszValue*/ )
+{
+    // Hack
+    if( STARTS_WITH_CI(pszKey, "AWS_") )
+        VSICurlAuthParametersChanged();
+}
+
 /************************************************************************/
 /*                         CPLSetConfigOption()                         */
 /************************************************************************/
@@ -1832,6 +1845,8 @@ void CPL_STDCALL
 CPLSetConfigOption( const char *pszKey, const char *pszValue )
 
 {
+    NotifyOtherComponentsConfigOptionChanged(pszKey, pszValue);
+
 #ifdef DEBUG_CONFIG_OPTIONS
     CPLAccessConfigOption(pszKey, FALSE);
 #endif
@@ -1885,6 +1900,8 @@ void CPL_STDCALL
 CPLSetThreadLocalConfigOption( const char *pszKey, const char *pszValue )
 
 {
+    NotifyOtherComponentsConfigOptionChanged(pszKey, pszValue);
+
 #ifdef DEBUG_CONFIG_OPTIONS
     CPLAccessConfigOption(pszKey, FALSE);
 #endif
diff --git a/gdal/port/cpl_vsil_curl.cpp b/gdal/port/cpl_vsil_curl.cpp
index 41713b0d404..5d49b9da989 100644
--- a/gdal/port/cpl_vsil_curl.cpp
+++ b/gdal/port/cpl_vsil_curl.cpp
@@ -65,6 +65,11 @@ void VSICurlPartialClearCache(const char* )
     // Not supported.
 }
 
+void VSICurlAuthParametersChanged()
+{
+    // Not supported.
+}
+
 /************************************************************************/
 /*                      VSICurlInstallReadCbk()                         */
 /************************************************************************/
@@ -97,6 +102,17 @@ int VSICurlUninstallReadCbk( VSILFILE* /* fp */ )
 static int N_MAX_REGIONS = 1000;
 static int DOWNLOAD_CHUNK_SIZE = 16384;
 
+/***********************************************************Ã¹************/
+/*                    VSICurlAuthParametersChanged()                    */
+/************************************************************************/
+
+static unsigned int gnGenerationAuthParameters = 0;
+
+void VSICurlAuthParametersChanged()
+{
+    gnGenerationAuthParameters++;
+}
+
 namespace cpl {
 
 /************************************************************************/
@@ -2550,7 +2566,10 @@ VSICurlFilesystemHandler::GetCachedFileProp( const char* pszURL,
 {
     CPLMutexHolder oHolder( &hMutex );
 
-    return oCacheFileProp.tryGet(std::string(pszURL), oFileProp);
+    return oCacheFileProp.tryGet(std::string(pszURL), oFileProp) &&
+            // Let a chance to use new auth parameters
+           !(oFileProp.eExists == EXIST_NO &&
+             gnGenerationAuthParameters != oFileProp.nGenerationAuthParameters);
 }
 
 /************************************************************************/
@@ -2559,10 +2578,11 @@ VSICurlFilesystemHandler::GetCachedFileProp( const char* pszURL,
 
 void
 VSICurlFilesystemHandler::SetCachedFileProp( const char* pszURL,
-                                             const FileProp& oFileProp )
+                                             FileProp& oFileProp )
 {
     CPLMutexHolder oHolder( &hMutex );
 
+    oFileProp.nGenerationAuthParameters = gnGenerationAuthParameters;
     oCacheFileProp.insert(std::string(pszURL), oFileProp);
 }
 
@@ -2576,7 +2596,9 @@ VSICurlFilesystemHandler::GetCachedDirList( const char* pszURL,
 {
     CPLMutexHolder oHolder( &hMutex );
 
-    return oCacheDirList.tryGet(std::string(pszURL), oCachedDirList);
+    return oCacheDirList.tryGet(std::string(pszURL), oCachedDirList) &&
+            // Let a chance to use new auth parameters
+           gnGenerationAuthParameters == oCachedDirList.nGenerationAuthParameters;
 }
 
 /************************************************************************/
@@ -2585,7 +2607,7 @@ VSICurlFilesystemHandler::GetCachedDirList( const char* pszURL,
 
 void
 VSICurlFilesystemHandler::SetCachedDirList( const char* pszURL,
-                                            const CachedDirList& oCachedDirList )
+                                            CachedDirList& oCachedDirList )
 {
     CPLMutexHolder oHolder( &hMutex );
 
@@ -2606,6 +2628,7 @@ VSICurlFilesystemHandler::SetCachedDirList( const char* pszURL,
         nCachedFilesInDirList -= oldValue.oFileList.size();
         oCacheDirList.remove(oldestKey);
     }
+    oCachedDirList.nGenerationAuthParameters = gnGenerationAuthParameters;
 
     nCachedFilesInDirList += oCachedDirList.oFileList.size();
     oCacheDirList.insert(key, oCachedDirList);
diff --git a/gdal/port/cpl_vsil_curl_class.h b/gdal/port/cpl_vsil_curl_class.h
index 3121f1cf9de..69ffd273055 100644
--- a/gdal/port/cpl_vsil_curl_class.h
+++ b/gdal/port/cpl_vsil_curl_class.h
@@ -69,6 +69,7 @@ typedef enum
 class FileProp
 {
   public:
+    unsigned int    nGenerationAuthParameters = 0;
     ExistStatus     eExists = EXIST_UNKNOWN;
     vsi_l_offset    fileSize = 0;
     time_t          mTime = 0;
@@ -83,6 +84,7 @@ class FileProp
 typedef struct
 {
     bool            bGotFileList = false;
+    unsigned int    nGenerationAuthParameters = 0;
     CPLStringList   oFileList{}; /* only file name without path */
 } CachedDirList;
 
@@ -244,7 +246,7 @@ class VSICurlFilesystemHandler : public VSIFilesystemHandler
     bool                GetCachedFileProp( const char* pszURL,
                                            FileProp& oFileProp );
     void                SetCachedFileProp( const char* pszURL,
-                                           const FileProp& oFileProp );
+                                           FileProp& oFileProp );
     void                InvalidateCachedData( const char* pszURL );
 
     CURLM              *GetCurlMultiHandleFor( const CPLString& osURL );
@@ -256,7 +258,7 @@ class VSICurlFilesystemHandler : public VSIFilesystemHandler
     bool                GetCachedDirList( const char* pszURL,
                                           CachedDirList& oCachedDirList );
     void                SetCachedDirList( const char* pszURL,
-                                          const CachedDirList& oCachedDirList );
+                                          CachedDirList& oCachedDirList );
     bool ExistsInCacheDirList( const CPLString& osDirname, bool *pbIsDir );
 
     virtual CPLString GetURLFromFilename( const CPLString& osFilename );
diff --git a/gdal/port/cpl_vsil_curl_priv.h b/gdal/port/cpl_vsil_curl_priv.h
index 63710fbb1a5..234c872198a 100644
--- a/gdal/port/cpl_vsil_curl_priv.h
+++ b/gdal/port/cpl_vsil_curl_priv.h
@@ -50,4 +50,6 @@ int VSICurlInstallReadCbk( VSILFILE* fp, VSICurlReadCbkFunc pfnReadCbk,
                            int bStopOnInterruptUntilUninstall );
 int VSICurlUninstallReadCbk( VSILFILE* fp );
 
+void VSICurlAuthParametersChanged();
+
 #endif // CPL_VSIL_CURL_PRIV_H_INCLUDED
